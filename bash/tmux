#!/usr/bin/env bash

# Tmux stuff

# Save ssh agent socket for using in tmux sessions
if [[ $SSH_AUTH_SOCK && $SSH_AUTH_SOCK != $HOME/.ssh/ssh_auth_sock ]]; then
    ln -sf $SSH_AUTH_SOCK ~/.ssh/ssh_auth_sock
fi

# wrapper for tmux, using socket assigned to user
function tm { tmux -2 -S /tmp/tm-`whoami` "$@"; }

# Tmux session alias for pair-programming
function tm-pair
{
    if [ ${2} ]; then
        tmux -2 -S /tmp/tm-${1} attach -t ${2}
    elif [ ${1} ]; then
        tmux -2 -S /tmp/tm-`whoami` new -s ${1}
    else
        echo 'Usage:'
        echo 'tm-pair feature_name # Create session'
        echo 'tm-pair user_name feature_name # Attach to session'
    fi
}

# Creates new tmux session for developing specific project. Opens initial windows/panes
# Syntax:
#    tm-new [session-name] [project]
function tm-new
{
    SESSION=$1

    # create session-name
    if [ -z $SESSION ] || [ $SESSION == '-' ]; then
        # find last session with name "work-NNN"
        SESSION=`tm ls 2>/dev/null | awk -F ':' '{print $1}' | grep work- | sort -n | tail -n1 | awk -F '-' '{print "work-"$2+1}'`
        [ -z $SESSION ] && SESSION='work-1'
    fi

    tm new-session -d -s $SESSION

    # Setup a main window
    tm rename-window -t $SESSION:0 'Main'
    tm send-keys "cd ~" C-m

    # Window 2 - project
    #tm new-window -t $SESSION:2 -n 'project'
    #tm split-window -h
    #tm select-pane -t 0
    #tm send-keys "cd ~/work" C-m
    #tm select-pane -t 1
    #tm send-keys "cd ~/work/project" C-m
    #tm resize-pane -D 20

    # Window 3 - dotfiles
    tm new-window -t $SESSION:1 -n 'dotfiles'
    tm send-keys "cd ~/dotfiles" C-m

    # Set default window
    tm select-window -t $SESSION:0

    # Attach to session
    tm attach-session -t $SESSION

}

